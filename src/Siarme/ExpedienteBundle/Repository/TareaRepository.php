<?php

namespace Siarme\ExpedienteBundle\Repository;

/**
 * TareaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TareaRepository extends \Doctrine\ORM\EntityRepository
{



    
    /**
     * Encuentra los TAREAS relacionados con el USUARIO
     *  por defecto devuelva las que estan sin realizar
     * 
     */
  public function findByTramiteReparticion($id)
  {
        $em = $this->getEntityManager();

        $consulta = $em->createQuery(
                 'SELECT tar, t
                        FROM ExpedienteBundle:Tarea tar 
                        JOIN tar.tramite t
                        WHERE t.departamentoRm= :id
                        AND tar.realizada= :estado
                        ORDER BY tar.fecha DESC
                        ');
        $consulta->setParameter('id', $id);
        $consulta->setParameter('estado', false);
        
        $tramite = $consulta->getResult();           
                 
        return $tramite;
    }
    /**
     * Encuentra los  TRAMITE con TAREAS relacionados con el USUARIO
     * 
     * 
     */
  public function findByExpedienteReparticion($reparticion)
  {
        $em = $this->getEntityManager();

        $consulta = $em->createQuery(
                 'SELECT e, m, t, tar
                        FROM ExpedienteBundle:Expediente e 
                        JOIN e.movimiento m
                        JOIN e.tramite t
                        JOIN t.tarea tar
                        WHERE m.departamentoRm= :id
                        AND t.tarea = :estado
                        ');
        $consulta->setParameter('id', $reparticion);
        $consulta->setParameter('estado', 0);
        $expedientes = $consulta->getResult();           
                 
        return $expedientes;

    }

	/**
     * Encuentra los  TRAMITE con TAREAS relacionados con el USUARIO
     * 
     * 
     */
  public function findByExpedienteUsuario($id, $estado = false)
  {
        $em = $this->getEntityManager();

        $consulta = $em->createQuery(
                 'SELECT e
                        FROM ExpedienteBundle:Expediente e 
                        JOIN e.tramite t
                        JOIN t.tarea tar
                        WHERE tar.usuario= :id
                        AND tar.realizada= :estado
                        ORDER BY tar.fecha DESC
                        ');
        $consulta->setParameter('id', $id);
        $consulta->setParameter('estado', $estado);
        
        $expedientes = $consulta->getResult();           
                 
        return $expedientes;
    }
    
    /**
     * Encuentra los TAREAS relacionados con el USUARIO
     *  por defecto devuelva las que estan sin realizar
     * 
     */
  public function findByTramiteUsuario($id, $realizada = false)
  {
        $em = $this->getEntityManager();

        if (!$realizada) {
            $consulta = $em->createQuery(
            'SELECT tar, tt, t
                FROM ExpedienteBundle:Tarea tar 
                INNER JOIN tar.tramite t
                INNER JOIN t.tipoTramite tt
                WHERE tar.usuario= :id
                AND t.departamentoRm = :dpto
                AND tar.realizada= :estado
                ORDER BY t.tipoTramite ASC
            ');
            $consulta->setParameter('id', $id);
            $consulta->setParameter('dpto', $id->getDepartamentoRm());
            $consulta->setParameter('estado', $realizada);
        } else {
            $consulta = $em->createQuery(
            'SELECT tar, tt, t
                FROM ExpedienteBundle:Tarea tar 
                INNER JOIN tar.tramite t
                INNER JOIN t.tipoTramite tt
                WHERE tar.usuario= :id
                AND tar.realizada= :estado
                ORDER BY t.tipoTramite ASC
            ');
            $consulta->setParameter('id', $id);
            $consulta->setParameter('estado', $realizada);
        }
        
        $tramite = $consulta->getResult();           
                 
        return $tramite;
    }

}
